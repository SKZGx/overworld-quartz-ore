def repo(r, String repoURL, String... groups) {
	r.maven {
		url = repoURL
		content {
			for (group in groups) { includeGroup group }
		}
	}
}

subprojects {
	apply plugin: "java"
	apply plugin: "idea"
	apply plugin: "maven-publish"

	java.toolchain.languageVersion = JavaLanguageVersion.of(17)
	java.withSourcesJar()

	jar {
		from(rootProject.file("LICENSE")) {
			rename { "${it}_${mod_name}" }
		}
		manifest {
			attributes([
				"Specification-Title"     : mod_name,
				"Specification-Vendor"    : mod_author,
				"Specification-Version"   : project.jar.archiveVersion,
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				"Timestamp"               : System.currentTimeMillis(),
				"Built-On-Java"           : "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})",
				"Built-On-Minecraft"      : minecraft_version
			])
		}
	}

	sourcesJar {
		from(rootProject.file("LICENSE")) {
			rename { "${it}_${mod_name}" }
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"
		it.options.release = 17
	}

	tasks.withType(GenerateModuleMetadata) {
		enabled = false
	}
}
